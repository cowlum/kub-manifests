#  the service account permissions are found in ../auth/ directory

apiVersion: v1
kind: Namespace
metadata:
  name: vault

---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: vault
  namespace: vault
  annotations:
    fluxcd.io/automated: "false"
spec:
  releaseName: vault
  interval: 5m
  chart:
    spec:
      chart: vault
      version: 0.21.0   # app 1.11.2
      sourceRef:
        kind: HelmRepository
        name: hashicorp
        namespace: flux-system
      interval: 10m
  values:
    server:
      extraSecretEnvironmentVars:
        # manually created with 'kubectl create secret generic -n vaultrestore vault-token --from-literal=vault-token=' value in LastPass
        - envName: VAULT_TOKEN
          secretName: vault-transit-token
          secretKey: vault-token
      standalone:
        # transit seal used so autounseal works on a pod restart
        config: |
          disable_mlock = true
          ui = true
          listener "tcp" {
            tls_disable = 1
            address = "[::]:8200"
            cluster_address = "[::]:8201"
          }
          storage "file" {
            path = "/vault/data"
          }
          seal "transit" {
            address            = "https://192.168.0.225:8243"
            token              = "hvs.CAESIEEEZw9nRZwcVV0aWSfYLT0IDeKYo_EA4LXhrIeweAyRGh4KHGh2cy5vSjQ4UzRtWGVVY3FjanJBeUlCdU9udEs"
            disable_renewal    = "false"
            // Key configuration
            key_name           = "autounseal"
            mount_path         = "transit/"
            namespace          = "keys/"
            tls_skip_verify    = "true"
            // TLS Configuration
            // tls_ca_cert        = "/vault/config/transit/ca_cert.pem"
            // tls_client_cert    = "/vault/config/transit/client_cert.pem"
            // tls_client_key     = "/vault/config/transit/client_key.pem"
            // tls_server_name    = "vault"
            // used during seal migrations
            disabled           = "false"
          }
      ingress:
        enabled: false   # defualts to false
      dataStorage:
        # if not using Consul, use local storage
        enabled: true
        size: 1Gi   # default 10Gi
      auditStorage:
        size: 1Gi   # default 10Gi
      ha:
        enabled: false   # use consul as backend
        replicas: 1
    injector:
      enabled: true
      webhook:
        timeoutSeconds: 29
    ui:               # create a Service entry for the UI
      enabled: false   # default false - can just port-forward to the server pod via Lens etc
    csi:              # secrets-store-csi-driver-provider-vault
      enabled: flase   # default false
---
#apiVersion: velero.io/v1
#kind: Schedule
#metadata:
#  name: vault
#  namespace: cluster-ops
#spec:
#  schedule: 10 16 * * *   # min hourr dayOfMonth month dayOfWeek in UTC time
#  template:
#    csiSnapshotTimeout: 10m
#    includedNamespaces:
#    - 'vault'
#    includedResources:
#    - '*'
#    includeClusterResources: null
#    labelSelector:
#      matchLabels:
#        app.kubernetes.io/instance: vault
#    snapshotVolumes: true
#    storageLocation: default
#    volumeSnapshotLocations:
#      - default
#    ttl: 96h0m0s
    # Whether restic should be used to take a backup of all pod volumes by default.
#    defaultVolumesToRestic: false
    # Actions to perform at different times during a backup. The only hook supported is
    # executing a command in a container in a pod using the pod exec API. Optional.
    # hooks:
